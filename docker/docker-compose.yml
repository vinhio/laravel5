version: '2.1'
services:

  web:
    build:
      context: ""
      dockerfile: Dockerfile.local
      args:
        hostUID: 1000
        hostGID: 1000
    image: laravel5-web
    hostname: laravel5-web
    container_name: laravel5-web
    labels:
      SERVICE_NAME: laravel5-web
      SERVICE_80_NAME: laravel5-web
      SERVICE_443_NAME: laravel5-web
    ports:
     - '8080:80'
     - '8443:443'
    depends_on:
      db:
        condition: service_healthy
      mail:
        condition: service_started
      redis:
        condition: service_started
    environment:
      APP_ENV: local
      PHP_IDE_CONFIG: serverName=laravel5-web.service.docker
    volumes:
    - ../:/home/www/app

  db:
    image: mysql:5.7.35
    #image: mysql:8.0.25
    hostname: laravel5-db
    container_name: laravel5-db
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel5
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    labels:
      SERVICE_NAME: laravel5-db
      SERVICE_3306_NAME: laravel5-db
      SERVICE_33060_NAME: laravel5-db
    ports:
      - '33060:3306'
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=secret --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 3s
      retries: 10
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    #command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password

  mail:
    image: mailhog/mailhog:v1.0.1
    hostname: laravel5-mail
    container_name: laravel5-mail
    labels:
        SERVICE_NAME: laravel5-mail
    ports:
      - '8025:8025'

  redis:
    image: redis:4.0.14-alpine3.11
    hostname: laravel5-redis
    container_name: laravel5-redis
    labels:
      SERVICE_NAME: laravel5-redis

  static:
    build:
      context: ""
      dockerfile: Dockerfile.nodejs
    image: laravel5-static
    hostname: laravel5-static
    container_name: laravel5-static